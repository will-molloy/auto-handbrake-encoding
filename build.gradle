logger.quiet "Java version: ${System.properties['java.version']}"
logger.quiet "Gradle version: $gradle.gradleVersion"

buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath group: 'com.diffplug.spotless', name: 'spotless-plugin-gradle', version: '6.12.1'
    classpath group: 'com.github.spotbugs.snom', name: 'spotbugs-gradle-plugin', version: '5.0.13'
    classpath group: 'com.asarkar.gradle', name: 'build-time-tracker', version: '4.3.0'
    classpath group: 'org.unbroken-dome.gradle-plugins', name: 'gradle-testsets-plugin', version: '4.0.0'
  }
}

// Build time tracker
apply plugin: 'com.asarkar.gradle.build-time-tracker'

allprojects {
  group 'com.willmolloy'
  version = '1.0.0'
  repositories {
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 19
  targetCompatibility = 19

  // Spotless (code formatting/linting)
  apply plugin: 'com.diffplug.spotless'
  spotless {
    java {
      removeUnusedImports()
      googleJavaFormat()
    }
  }

  // Checkstyle (static analysis - code quality/style)
  apply plugin: 'checkstyle'
  checkstyle {
    toolVersion = '9.2'
    configFile = rootProject.file('./checkstyle.xml')
    maxErrors = 0
    maxWarnings = 0
    ignoreFailures = false
  }

  // SpotBugs (static analysis - find possible bugs, performance issues etc.)
  apply plugin: 'com.github.spotbugs'
  spotbugs {
    effort = 'max'
    reportLevel = 'low'
    ignoreFailures = false
    excludeFilter = rootProject.file('./spotbugs-exclude.xml')
  }
  tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
      html.enabled = true
      xml.enabled = false
    }
  }

  // Tests
  tasks.withType(Test) {
    // use JUnit 5 engine
    useJUnitPlatform()
    testLogging {
      events = ['failed', 'skipped']
      // log the full failure messages
      exceptionFormat = 'full'
      showExceptions = true
      showCauses = true
      showStackTraces = true
      // log the overall results (based on https://stackoverflow.com/a/36130467/6122976)
      afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
          println("Results: ${result.resultType} " +
              "(${result.testCount} test${result.testCount > 1 ? "s" : ""}, " +
              "${result.successfulTestCount} passed, " +
              "${result.failedTestCount} failed, " +
              "${result.skippedTestCount} skipped)")
        }
      }
    }
  }

  // JaCoCo (code coverage reporting)
  apply plugin: 'jacoco'
  tasks.withType(JacocoReport) {
    reports {
      xml.enabled = true
      html.enabled = true
      csv.enabled = false
    }
  }
  test.finalizedBy jacocoTestReport

  // Integration test support
  apply plugin: 'org.unbroken-dome.test-sets'
  testSets {
    integrationTest
  }
  integrationTest.finalizedBy jacocoIntegrationTestReport

  // enable preview features
  tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
  }
  tasks.withType(Test) {
    jvmArgs += "--enable-preview"
  }
  tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
  }

  // pin dependency versions
  ext {
    // production
    guavaVersion = '31.1-jre'
    log4jVersion = '2.17.0'

    // test
    junitVersion = '5.9.1'
    truthVersion = '1.1.3'
    mockitoVersion = '4.9.0'
  }

  dependencies {
    implementation group: 'com.google.guava', name: 'guava', version: "$guavaVersion"
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$log4jVersion"
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.7.3'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: "$junitVersion"
    testImplementation group: 'com.google.truth', name: 'truth', version: "$truthVersion"
    testImplementation group: 'com.google.truth.extensions', name: 'truth-java8-extension', version: "$truthVersion"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "$mockitoVersion"
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: "$mockitoVersion"
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: "$mockitoVersion"
    testImplementation group: 'com.google.jimfs', name: 'jimfs', version: '1.2'
  }

  // dependency cleanup, exclusions and resolutions
  configurations.all {
    exclude group: 'org.assertj' // using truth instead

    resolutionStrategy {
      force "com.google.guava:guava:$guavaVersion" // so the android version isn't pulled in
    }
  }
}
